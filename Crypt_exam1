from tkinter import *
from PIL  import ImageTk, Image
import base64
from tkinter import messagebox

window = Tk()
window.title("Secret Notes")
window.minsize(height=600,width=300)
lbl_font= "Arial",10,"bold"
#png resmi g√∂sterme
canvas = Canvas(width=300,height=300)
canvas.place(x=75,y=0)
img = (Image.open("secret2.png"))
resized_image = img.resize((120,110))
new_image = ImageTk.PhotoImage(resized_image)
canvas.create_image(10,10,anchor=NW,image=new_image)






def encode(key, clear):

    enc = []
    for i in range(len(clear)):
        key_c = key[i % len(key)]
        enc_c = chr((ord(clear[i]) + ord(key_c)) % 65536)
        enc.append(enc_c)
    return base64.urlsafe_b64encode("".join(enc).encode("utf-8")).decode("utf-8")



def write_encryted_file():
    title_input = title_entry.get()
    listbox_input = enter_listbox.get("1.0", END)
    masterkey_input_get = enter_Master_entry.get()

    if len(title_input) == 0 or len(listbox_input) ==0 or len(masterkey_input_get) == 0:
        messagebox.showinfo(title="Error !",message="Please Enter All info")

    else:

        try:
            encrypted_text = encode(masterkey_input_get, listbox_input)
            with open("mynote.txt", "a") as data_file:
                data_file.write(f"\n{title_input}\n{encrypted_text}")

                messagebox.showinfo(title="info !",message="Your Secret Notes Saved")
        except FileNotFoundError:
            with open("mynote.txt", "w") as data_file:
                data_file.write(f"\n{title_input}\n{encrypted_text}")

                messagebox.showinfo(title="info !",message="Your Secret Notes Saved")
        finally:

            title_entry.delete(0,END)
            enter_listbox.delete("1.0",END)
            enter_Master_entry.delete(0,END)
            title_entry.focus()

#decrypt
def decrypt():
    def decode(key, enc):
        dec = []
        enc = base64.urlsafe_b64decode(enc).decode("utf-8")
        for i in range(len(enc)):
            key_c = key[i % len(key)]
            dec_c = chr((65536 + ord(enc[i]) - ord(key_c)) % 65536)
            dec.append(dec_c)
        return "".join(dec)


    encrypted_message = enter_listbox.get("1.0",END)
    masterkey = enter_Master_entry.get()

    if len(encrypted_message) == 0 or len(masterkey) ==0:
        messagebox.showinfo(title="Error !",message="Please Enter All info")

    else:
        try:
            decrypt_message = decode(masterkey,encrypted_message)
            enter_listbox.delete("1.0",END)
            enter_Master_entry.delete(0,END)
            enter_listbox.insert("1.0",decrypt_message)

        except:
            messagebox.showinfo(title="Error !", message="Pls enter encrypted text")


#ui


enter_title_label =Label(text="Enter Your Title",font=lbl_font)
enter_title_label.place(x=90,y=200)

title_entry = Entry(width=25,font=lbl_font)
title_entry.place(x=65,y=230)

enter_secret_label =Label(text="Enter Your Secret",font=lbl_font)
enter_secret_label.place(x=85,y=250)

enter_listbox = Text(width=35,height=10,font=lbl_font)
enter_listbox.place(x=30,y=280)

enter_masterkey_label =Label(text="Enter Master key",font=lbl_font)
enter_masterkey_label.place(x=90,y=450)

enter_Master_entry = Entry(width=25,font=lbl_font)
enter_Master_entry.place(x=65,y=480)

save_button = Button(text="Save & Encrypt",font=lbl_font,command=write_encryted_file)
save_button.place(x =90,y=510)

decrypt_button = Button(text="Decrypt",font=lbl_font,command=decrypt)
decrypt_button.place(x =115,y=540)


mainloop()
